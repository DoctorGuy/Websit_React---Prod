{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ellio\\\\Documents\\\\Projects\\\\Websit_React\\\\portfolio_website\\\\src\\\\components\\\\Pages\\\\python.js\";\nimport React from 'react';\nimport '../../App.js';\nimport Footer from '../Footer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function python() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"python\",\n      children: \"Python Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Machine learning: A Quick introduction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"For the uninitiated, Machine Learning is just a fancy way of saying prediction analysis with this use of specific statistical analysis without specific instructions. The goal of Machine Learning is to train our model on historical data to predict the future without the need of humans modifying the model to fit specific situations. It is designed to get better over time with more data, as it trains itself on the wins and losses. Machine learning algorithms are flexible and adapt quickly to new data. Some terms worth knowing are defined below. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Overfitting: The data is too aligned with the training data. Think of overfitting as your friend who takes things to literal. They lack the flexibility to bend to metaphors which can lead to some misunderstandings. In this case, overfitting can lead to the algorithm struggling with novel data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Underfitting: The data is poorly aligned with the data. This is your second-string rookie quarterback. Not accurate and poorly executing tasks, but with some time, could develop into a great player with some more reps. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Confusion Matrix: A classification table for true/false positive/negatives.   \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Sensitivity: The ability for the algorithm to detect a positive indication. A high sensitivity means there are few false negatives. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Specificity: The ability for the algorithm to determine a negative indication. A high specificity means there are few false positives. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Let\\u2019s think of a use case for Machine Learning over traditional predictive analysis. Let\\u2019s say I wanted to develop an app to give quality ratings to wines. Experts have already rated a bunch of wines, so we could take the data from there and place them on ours, as long as we refer to them. But what about new wines? With Machine Learning, we could take the past ratings, train a model, and then apply a \\u201Crecommended\\u201D label to it!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"As important as it is to demonstrate the ability to conduct machine learning analysis, I think it equally important to describe my thought process throughout. As we go along, I\\u2019ll describe why I decided one path over another, as well as my pros and cons to alternative ideas. With that in mind, let\\u2019s dive in. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"names":["React","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","python","children","className","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/ellio/Documents/Projects/Websit_React/portfolio_website/src/components/Pages/python.js"],"sourcesContent":["import React from 'react';\r\nimport '../../App.js'\r\nimport Footer from '../Footer.js';\r\n\r\n\r\nexport default function python() {\r\n    return (\r\n    <>\r\n    <h1 className='python'>Python Projects</h1>\r\n    <div>\r\n    <h1>Machine learning: A Quick introduction</h1>\r\n    <p>For the uninitiated, Machine Learning is just a fancy way of saying prediction analysis with this use of \r\n      specific statistical analysis without specific instructions. The goal of Machine Learning is to train our \r\n      model on historical data to predict the future without the need of humans modifying the model to fit specific \r\n      situations. It is designed to get better over time with more data, as it trains itself on the wins and losses. \r\n      Machine learning algorithms are flexible and adapt quickly to new data. Some terms worth knowing are defined below. </p>\r\n    <ul>\r\n      <li>Overfitting: The data is too aligned with the training data. Think of overfitting as your friend who takes things to literal.\r\n         They lack the flexibility to bend to metaphors which can lead to some misunderstandings.\r\n          In this case, overfitting can lead to the algorithm struggling with novel data.</li>\r\n      <li>Underfitting: The data is poorly aligned with the data. This is your second-string\r\n         rookie quarterback. Not accurate and poorly executing tasks, but with some time, could develop into a great player with some more reps. </li>\r\n      <li>Confusion Matrix: A classification table for true/false positive/negatives.   </li>\r\n      <li>Sensitivity: The ability for the algorithm to detect a positive indication. A high sensitivity means there are few false negatives. </li>\r\n      <li>Specificity: The ability for the algorithm to determine a negative indication. A high specificity means there are few false positives. </li>\r\n    </ul>\r\n    <p>Let’s think of a use case for Machine Learning over traditional predictive analysis. Let’s say I wanted to develop an app to give quality ratings\r\n       to wines. Experts have already rated a bunch of wines, so we could take the data from there and place them on ours, as long as we refer to them. \r\n       But what about new wines? With Machine Learning, we could take the past ratings, train a model, and then apply a “recommended” label to it!</p>\r\n    <p>As important as it is to demonstrate the ability to conduct machine learning analysis, I think it equally important to describe my thought process throughout.\r\n       As we go along, I’ll describe why I decided one path over another, as well as my pros and cons to alternative ideas. With that in mind, let’s dive in. </p>\r\n    <p></p>\r\n    <p></p>\r\n    </div>\r\n    <Footer />\r\n    </>);\r\n  }"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC7B,oBACAH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACAJ,OAAA;MAAIK,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CT,OAAA;MAAAI,QAAA,gBACAJ,OAAA;QAAAI,QAAA,EAAI;MAAsC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CT,OAAA;QAAAI,QAAA,EAAG;MAImH;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1HT,OAAA;QAAAI,QAAA,gBACEJ,OAAA;UAAAI,QAAA,EAAI;QAE+E;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxFT,OAAA;UAAAI,QAAA,EAAI;QACuI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChJT,OAAA;UAAAI,QAAA,EAAI;QAA8E;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvFT,OAAA;UAAAI,QAAA,EAAI;QAAoI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7IT,OAAA;UAAAI,QAAA,EAAI;QAAuI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9I,CAAC,eACLT,OAAA;QAAAI,QAAA,EAAG;MAE2I;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClJT,OAAA;QAAAI,QAAA,EAAG;MACuJ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9JT,OAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPT,OAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNT,OAAA,CAACF,MAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACR,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}