{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ellio\\\\Documents\\\\Projects\\\\Websit_React\\\\portfolio_website\\\\src\\\\components\\\\ShinyDashbaordComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardComponent = () => {\n  _s();\n  const [dashboardHTML, setDashboardHTML] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Print a message to indicate the fetch is happening\n        console.log(\"Fetching HTML content...\");\n        const response = await fetch('/images/Dash.html');\n\n        // Print the HTTP status of the response\n        console.log(\"HTTP Status:\", response.status);\n        const htmlContent = await response.text();\n\n        // Print the fetched HTML content\n        console.log(\"Fetched HTML content:\", htmlContent);\n        setDashboardHTML(htmlContent);\n      } catch (error) {\n        // Print any errors that occur during fetch\n        console.error(\"Fetch Error:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: dashboardHTML\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardComponent, \"TUP7UqVSbx3jtKDfzV2NHtifxTg=\");\n_c = DashboardComponent;\nexport default DashboardComponent;\nvar _c;\n$RefreshReg$(_c, \"DashboardComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DashboardComponent","_s","dashboardHTML","setDashboardHTML","fetchData","console","log","response","fetch","status","htmlContent","text","error","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ellio/Documents/Projects/Websit_React/portfolio_website/src/components/ShinyDashbaordComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst DashboardComponent = () => {\r\n  const [dashboardHTML, setDashboardHTML] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Print a message to indicate the fetch is happening\r\n        console.log(\"Fetching HTML content...\");\r\n\r\n        const response = await fetch('/images/Dash.html');\r\n        \r\n        // Print the HTTP status of the response\r\n        console.log(\"HTTP Status:\", response.status);\r\n\r\n        const htmlContent = await response.text();\r\n        \r\n        // Print the fetched HTML content\r\n        console.log(\"Fetched HTML content:\", htmlContent);\r\n\r\n        setDashboardHTML(htmlContent);\r\n      } catch (error) {\r\n        // Print any errors that occur during fetch\r\n        console.error(\"Fetch Error:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div dangerouslySetInnerHTML={{ __html: dashboardHTML }} />\r\n  );\r\n};\r\n\r\nexport default DashboardComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACAC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QAEvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;;QAEjD;QACAH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,QAAQ,CAACE,MAAM,CAAC;QAE5C,MAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;;QAEzC;QACAN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEI,WAAW,CAAC;QAEjDP,gBAAgB,CAACO,WAAW,CAAC;MAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACd;QACAP,OAAO,CAACO,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKc,uBAAuB,EAAE;MAAEC,MAAM,EAAEZ;IAAc;EAAE;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE/D,CAAC;AAACjB,EAAA,CAhCID,kBAAkB;AAAAmB,EAAA,GAAlBnB,kBAAkB;AAkCxB,eAAeA,kBAAkB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}